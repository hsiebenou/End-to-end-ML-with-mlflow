name: Deploy MLflow projet
run-name: Build and Deploy
on:
  push:
    branches:
      - master
      - dev
      - releases/**
    tags:
      - v2
      - v1.*
  pull_request:
    branches: [ master ]
permissions: read-all
jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # if [ -f lint_requirements.txt ]; then pip install -r lint_requirements.txt; fi
    - name: Install dependencies for linting
      run: |
        if [ -f lint_requirements.txt ]; then pip install -r lint_requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with mypy
      run: |
        mypy src/
    - uses: isort/isort-action@master
        with:
            requirementsFiles: "requirements.txt test_requirements.txt, lint_requirements.txt"
  Test_unit:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"] #, "3.10", "3.11", "pypy3.9", "pypy3.10"]
        exclude:
          - os: macos-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.9"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Upgrade pip
      run: python -m pip install --upgrade pip 
    - name: Install requirements
      run: |
        pip install -r test_requirements.txt
    - name: Run unit test
      run: |
        pytest test.py                  # --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  
